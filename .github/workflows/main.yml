name: Build EXE

on:
  push:
    branches: [ master ]

jobs:
  Get-Tag:
    strategy:
      matrix:
        os: [ ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Get Tag
        id: tag
        uses: devops-actions/action-get-tag@v1.0.2
        with:
          strip_v: false # Optional: Remove 'v' character from version
          default: v1.3.16 # Optional: Default version when tag not found
      - name: cal tag
        id: version
        uses: actions/github-script@v6
        with:
          script: |
            const tag = '${{ steps.tag.outputs.tag }}'
            const semver = require('semver')
            const nextVersion = semver.inc(tag, 'patch');
            console.log(`::set-output name=next_version::${nextVersion}`)
        

    #      - name: Create Release
#        id: create_release
#        uses: actions/create-release@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.Token }}
#        with:
#          tag_name: ${{ steps.tag.outputs.tag }}
#          release_name: Combiner-${{ steps.tag.outputs.tag }}
#          body: ${{ github.event.head_commit.message }}
#          draft: false
#          prerelease: false
    outputs:
      tag: ${{ steps.tag.outputs.next_version }}
      url: ${{ steps.create_release.outputs.upload_url }}
  test:
    needs: Get-Tag
    runs-on: "ubuntu-latest"
    steps:
      - run: |
          echo ${{ needs.Get-Tag.outputs.tag }}
          echo ${{ github.event.pull_request.labels }}

#  Build:
#    strategy:
#      matrix:
#        os: [ windows-latest ]
#        python-version: [ 3.11 ]
#    runs-on: ${{ matrix.os }}
#    steps:
#      - uses: actions/checkout@v2
#      - name: Set up Python ${{ matrix.python-version }}
#        uses: actions/setup-python@v2
#        with:
#          python-version: ${{ matrix.python-version }}
#      - name: Install dependencies
#        run: |
#          python -m pip install --upgrade pip
#          pip install -r requirements.txt
#      - name: Build executable
#        run: |
#          pyinstaller -F -i merge-cells.ico -n Combiner-${{ needs.Get-Tag.outputs.tag }} main.py
#        env:
#          PYTHONPATH: ${{ env.PYTHONPATH }}
#      - name: Create Release
#        id: create_release
#        uses: actions/create-release@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.Token }}
#        with:
#          tag_name: ${{ needs.Get-Tag.outputs.tag }}
#          release_name: Combiner-${{ needs.Get-Tag.outputs.tag }}
#          body: ${{ github.event.head_commit.message }}
#          draft: false
#          prerelease: false
#      - name: Upload Release Asset
#        id: upload_release_asset
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.Token }}
#        with:
#          upload_url: ${{ needs.Get-Tag.outputs.url }}
#          asset_path: ./dist/Combiner-${{ needs.Get-Tag.outputs.tag }}.exe
#          asset_name: Combiner-${{ needs.Get-Tag.outputs.tag }}.exe
#          asset_content_type: application/octet-stream

