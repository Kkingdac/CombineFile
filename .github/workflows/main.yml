name: Build EXE

on:
  push:
    branches: [ master ]

jobs: 
  build:
    strategy:
      matrix: 
        os: [ windows-latest ]
        python-version: [ 3.11 ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Get Commit Title
        id: get_commit_title
        run: echo ${{github.event.head_commit.message}}
#      - uses: actions/checkout@v2
#      - name: Set up Python ${{ matrix.python-version }}
#        uses: actions/setup-python@v2
#        with:
#          python-version: ${{ matrix.python-version }}
#      - name: Install dependencies
#        run: |
#          python -m pip install --upgrade pip
#          pip install -r requirements.txt
#      - name: Build executable
#        run: |
#          pyinstaller -F -i merge-cells.ico -n Combiner-${{ steps.get_commit_title.outputs.title }} main.py
#        env:
#          PYTHONPATH: ${{ env.PYTHONPATH }}
#      - name: Create Release
#        id: create_release
#        uses: actions/create-release@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.Token }}
#        with:
#          tag_name: ${{ steps.get_commit_title.outputs.title }}
#          release_name: Combiner-${{ steps.get_commit_title.outputs.title }}
#          body: ${{ github.event.head_commit.message }}
#          draft: false
#          prerelease: false
#      - name: Upload Release Asset
#        id: upload_release_asset
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.Token }}
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }}
#          asset_path: ./dist/Combiner-${{ steps.get_commit_title.outputs.title }}.exe
#          asset_name: Combiner-${{ steps.get_commit_title.outputs.title }}.exe
#          asset_content_type: application/octet-stream

